name: Build and Deploy to Hostinger

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Update Next.js Config to Skip API Routes
        run: |
          # Create backup of existing config
          cp next.config.js next.config.js.bak || cp next.config.mjs next.config.mjs.bak || echo "No config file found"

          # Create a simple next.config.js for static export
          echo 'import type { NextConfig } from "next";

          const nextConfig: NextConfig = {
            output: "export",
            images: {
              unoptimized: true,
              remotePatterns: [
                {
                  protocol: "https",
                  hostname: "**",
                },
              ],
            },
            skipTrailingSlashRedirect: true,
            skipApiRoutes: true,
            // Only build specific pages
            exportPathMap: async function () {
              return {
                "/": { page: "/" },
                "/movies": { page: "/movies" },
                "/TVShows": { page: "/TVShows" },
                "/login": { page: "/login" },
                "/signup": { page: "/signup" },
              };
            },
          };

          export default nextConfig;' > next.config.mjs

      - name: Build Next.js application
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: List directories to verify output
        run: |
          echo "Current directory content:"
          ls -la
          echo "Checking for 'out' directory:"
          ls -la out || echo "Out directory not found"
          echo "Checking database directory:"
          ls -la database || echo "Database directory not found"

      - name: Prepare deployment package
        run: |
          # Create a deployment directory
          mkdir -p deploy

          # Copy the static frontend files
          if [ -d "out" ]; then
            cp -r out deploy/
          else
            echo "WARNING: 'out' directory not found. Creating empty directory."
            mkdir -p deploy/out
            echo "<html><body>Placeholder page. Static build not found.</body></html>" > deploy/out/index.html
          fi

          # Copy database directory regardless of JS files
          if [ -d "database" ]; then
            mkdir -p deploy/database
            cp -r database/* deploy/database/ || echo "Failed to copy database content"
          else
            mkdir -p deploy/database
            echo "console.log('Server placeholder');" > deploy/database/server.js
          fi

          # Copy package.json and install production dependencies
          cp package.json deploy/

          # Create server start script
          echo "node database/server.js" > deploy/start.sh
          chmod +x deploy/start.sh

          # Create a minimal deployment README
          echo "# MovieDB Application

          ## Frontend
          Static files are in the 'out' directory.

          ## Backend
          Start the server with 'node database/server.js'
          " > deploy/README.md

      - name: Deploy to Hostinger via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./deploy/
          server-dir: ${{ secrets.FTP_SERVER_DIR }}
