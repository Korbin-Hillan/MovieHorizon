name: Build and Deploy Frontend to Hostinger

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Create Next.js config file
        run: |
          cat > next.config.mjs << 'EOL'
          // next.config.mjs
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            output: "export",
            images: {
              unoptimized: true,
              remotePatterns: [
                {
                  protocol: "https",
                  hostname: "**",
                },
              ],
            },
            skipTrailingSlashRedirect: true,
            skipApiRoutes: true,
            // Only build specific pages
            exportPathMap: async function () {
              return {
                "/": { page: "/" },
                "/movies": { page: "/movies" },
                "/TVShows": { page: "/TVShows" },
                "/login": { page: "/login" },
                "/signup": { page: "/signup" },
              };
            },
          };

          export default nextConfig;
          EOL

      - name: Build Next.js application
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: Verify build output
        run: |
          echo "Checking for 'out' directory:"
          ls -la out || echo "Out directory not found"

      - name: Deploy to Hostinger via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./out/
          server-dir: ${{ secrets.FTP_SERVER_DIR }}
